{
  "useEffect": {
    "prefix": [
      "ue"
    ],
    "body": [
      "useEffect(() => {}, []);"
    ],
    "description": "",
    "scope": "javascriptreact"
  },
  "setTimeout": {
    "prefix": [
      "setTimeout"
    ],
    "body": [
      "setTimeout(() => {}, 0);"
    ],
    "description": "",
    "scope": "javascriptreact"
  },
  "measure": {
    "prefix": [
      "measure"
    ],
    "body": [
      "const ref = useRef(null);",
      "",
      "useEffect(() => {",
      "  ref.current?.measure((...data) => console.log(data));",
      "}, [ref]);"
    ],
    "description": "",
    "scope": "javascriptreact"
  },
  "redux dispatch": {
    "prefix": [
      "dispatch"
    ],
    "body": [
      "const dispatch = useDispatch();"
    ],
    "description": "",
    "scope": "javascriptreact"
  },
  "function": {
    "prefix": [
      "func"
    ],
    "body": [
      "function $1($2) {",
      "  $3;",
      "}"
    ],
    "description": "",
    "scope": "javascriptreact"
  },
  "console log": {
    "prefix": [
      "clg"
    ],
    "body": [
      "console.log($1);"
    ],
    "description": "",
    "scope": "javascriptreact"
  }
}