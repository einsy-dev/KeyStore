{
  "useEffect": {
    "prefix": [
      "ue"
    ],
    "body": [
      "useEffect(() => {}, [])"
    ],
    "description": "",
    "scope": "typescriptreact"
  },
  "setTimeout": {
    "prefix": [
      "setTimeout"
    ],
    "body": [
      "setTimeout(() => {}, 0)"
    ],
    "description": "",
    "scope": "typescriptreact"
  },
  "measure": {
    "prefix": [
      "measure"
    ],
    "body": [
      "const ref = useRef(null);\r",
      "\r",
      "  useEffect(() => {\r",
      "    ref.current?.measure((...data) => console.log(data));\r",
      "  }, [ref]);"
    ],
    "description": "",
    "scope": "typescriptreact"
  }
}