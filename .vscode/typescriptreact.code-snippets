{
  "useEffect": {
    "prefix": [
      "ue"
    ],
    "body": [
      "useEffect(() => {}, [])"
    ],
    "description": "",
    "scope": "typescriptreact"
  },
  "setTimeout": {
    "prefix": [
      "setTimeout"
    ],
    "body": [
      "setTimeout(() => {}, 0)"
    ],
    "description": "",
    "scope": "typescriptreact"
  },
  "measure": {
    "prefix": [
      "measure"
    ],
    "body": [
      "const ref = useRef(null);\r",
      "\r",
      "  useEffect(() => {\r",
      "    ref.current?.measure((...data) => console.log(data));\r",
      "  }, [ref]);"
    ],
    "description": "",
    "scope": "typescriptreact"
  },
  "redux dispatch": {
    "prefix": [
      "dispatch"
    ],
    "body": [
      "const dispatch = useDispatch();"
    ],
    "description": "",
    "scope": "typescriptreact"
  },
  "function": {
    "prefix": [
      "func"
    ],
    "body": [
      "function $1($2) {\r",
      "    $3\r",
      "  }"
    ],
    "description": "",
    "scope": "typescriptreact"
  },
  "console log": {
    "prefix": [
      "clg"
    ],
    "body": [
      "console.log($1)"
    ],
    "description": "",
    "scope": "typescriptreact"
  }
}